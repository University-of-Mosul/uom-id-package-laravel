<?php

namespace App\Providers;

use Exception;
use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Route;
use Illuminate\Http\Request;
use UoMosul\UomIdPackageLaravel\Http\Controllers\AuthController;

class UomAuthServiceProvider extends ServiceProvider
{
    /**
     * Register services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap services.
     */
    public function boot(): void
    {
        // Define custom guard for Ory Kratos instance (https://laravel.com/docs/10.x/authentication#adding-custom-guards, https://laravel.com/docs/10.x/authentication#closure-request-guards)
        Auth::viaRequest('uom', function (Request $request) {
            try {
                $response = Http::withHeader('Cookie', $request->header('Cookie'))->get(config('uom-id.auth.uom.routes.session'));

                $user = $response->json();

                return $user === [] ? null : (object) $user;
            } catch (Exception $e) {
                // FIXME: Handle this more thoroughly?
                return null;
            }
        });

        // Register routes
        $this->defineRoutes();
    }


    /**
     * Define the UOM ID Auth routes.
     *
     * @return void
     */
    protected function defineRoutes()
    {
        if (app()->routesAreCached()) {
            return;
        }

        Route::group(['prefix' => 'auth'], function () {
            // ALL ROUTES UNDER THE GROUP ARE PREFIXED WITH "/auth"

            Route::get('@me', AuthController::class . '@current_user');
            Route::get('login', AuthController::class . '@login')->name('login');
            Route::get('logout', AuthController::class . '@logout')->name('logout');
        });
    }
}
